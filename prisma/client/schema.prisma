generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String   @db.VarChar(100)
  lastName  String   @db.VarChar(100)
  email     String   @unique
  password  String   @db.VarChar(120)
  role      UserRole @default(CUSTOMER)
  blocked   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  image     String?  @db.VarChar(255)
  order     Order[]

  @@map("users")
}

model Category {
  id        String      @id @default(uuid())
  name      String      @db.VarChar(255)
  prioducts products[]

  @@map("categories")
}

model OrderItem {
  id         String    @id @default(uuid())
  quantity   Int       @default(1)
  totalPrice Float?    @default(0)
  orderId    String?
  productId  String
  order      Order?    @relation(fields: [orderId], references: [id])
  product    products @relation(fields: [productId], references: [id])

  @@map("orderItems")
}

model Order {
  id            String        @id @default(uuid())
  paymentRef    String?       @db.VarChar(255)
  totalPrice    Float
  paymentStatus PaymentStatus @default(PENDING)
  userId        String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  orderItems    OrderItem[]
  user          User          @relation(fields: [userId], references: [id])

  @@map("orders")
}

model products {
  id          String      @id
  name        String      @db.VarChar(255)
  price       Float       @default(0)
  description String?
  categoryId  String?
  orderItems  OrderItem[]
  categories  Category?   @relation(fields: [categoryId], references: [id])
}

enum UserRole {
  ADMIN    @map("admin")
  CUSTOMER @map("customer")
  DRIVER   @map("driver")
}

enum PaymentStatus {
  PENDING  @map("PENDING")
  CANCELED @map("CANCELED")
  NOTPAID  @map("NOTPAID")
  PAID     @map("PAID")
}
